import 'package:flutter/material.dart';import 'package:firebase_auth/firebase_auth.dart';import 'package:flutter/cupertino.dart';import 'package:finalexam/provider/category_provider.dart';import 'package:finalexam/provider/todo_db.dart';import 'package:finalexam/model/item_model.dart';class NewCategoryInsertWidget extends StatefulWidget {  @override  _NewCategoryInsertWidgetState createState() => _NewCategoryInsertWidgetState();}class _NewCategoryInsertWidgetState extends State<NewCategoryInsertWidget> {  final auth = FirebaseAuth.instance;  bool activateButton = false;  TextEditingController nameTextController = TextEditingController();  FocusNode nameFocus = FocusNode();  @override  void initState() {    super.initState();  }  @override  void dispose() {    nameFocus.dispose();    nameTextController.dispose();    super.dispose();  }  @override  Widget build(BuildContext context) {    return RefreshIndicator(      onRefresh: onRefresh,      child: Container(        margin: EdgeInsets.only(            left: 10.0, top: 10.0, right: 10.0),        padding: EdgeInsets.fromLTRB(16.0,16.0,16.0,0.0),        height: MediaQuery.of(context).size.height*0.1,        child: SafeArea(          child: Center(            child: Row(              children: <Widget>[                Container(                  alignment: Alignment.center,                  width: MediaQuery                      .of(context)                      .size                      .width*0.6,                  height: MediaQuery                      .of(context)                      .size                      .height * 0.06,                  child: TextField(                    autofocus: true,                    controller: nameTextController,                    onChanged: (str) => setState(() => activateButton = true),                    focusNode: nameFocus,                    style: TextStyle(                        color: Colors.blueAccent,                        fontSize: 17.0,                        fontWeight: FontWeight.bold                    ),                    decoration: InputDecoration.collapsed(                        hintText: "새로운 할 일",                        hintStyle: TextStyle(                            fontSize: 17.0,                            fontWeight: FontWeight.bold                        )                    ),                  ),                ),                OutlineButton(                    borderSide: BorderSide(color:  activateButton ? Colors.lightBlueAccent : Colors.grey),                    child: Text("저장하기", style: TextStyle(color: Colors.blueGrey),),                    onPressed: activateButton ? ()  {                      TodoDataBaseService().createCategory(nameTextController.value.text);                      TodoDataBaseService().updateCategory(nameTextController.value.text);                      Navigator.of(context).pop();                    } : null                )              ],            )          ),        ),      ),    );  }  Future onRefresh() async {    await new Future.delayed(Duration(seconds: 3));    return ;  }}